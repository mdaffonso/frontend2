const _id=id=>document.getElementById(id),_ch=(parent,...children)=>{for(let child of children)parent.appendChild(child)},STATE=JSON.parse(localStorage.getItem("cards"))||[],ERRORS={},BUTTON_NEW=_id("btn-new"),BUTTON_ABOUT=_id("btn-about"),FORM_NEW=_id("form-new"),BUTTON_THEME=_id("btn-theme"),createUID=numberOfChars=>{const validChars="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";let randomId=validChars[Math.floor(Math.random()*validChars.length-10)];for(let i=1;i<numberOfChars;i++)randomId+=validChars[Math.floor(Math.random()*validChars.length)];if(!STATE.find(object=>object.id===randomId))return randomId;createUID(numberOfChars)},checkImage=url=>new Promise((resolve,reject)=>{const timeout=5e3,img=new Image;let timer;img.onerror=img.onabort=()=>{clearTimeout(timer),reject("error")},img.onload=()=>{clearTimeout(timer),resolve("success")},timer=setTimeout(()=>{img.src="//!!!!/test.jpg",reject("timeout")},5e3),img.src=url}),validate=async(key,text)=>{const limit=100;let imageResult;delete ERRORS[key];try{imageResult=await checkImage(text)}catch(error){imageResult=error}"success"!==imageResult&&(text.trim()||(ERRORS[key]="O campo não pode ficar em branco"),text.length>100&&(ERRORS[key]="O campo não pode ter mais de 100 caracteres"))},sendToLocalStorage=()=>{localStorage.setItem("cards",JSON.stringify(STATE))},createElement=p=>{if(!p.tag)return;const tag=document.createElement(p.tag);if(p.id&&(tag.id=p.id),p.textContent&&(tag.textContent=p.textContent),p.src&&(tag.src=p.src),p.alt&&(tag.alt=p.alt),p.type&&(tag.type=p.type),p.classList&&Array.isArray(p.classList))for(let className of p.classList)tag.classList.add(className);if(p.attributes&&Array.isArray(p.attributes))for(let attribute of p.attributes)tag.setAttribute(attribute.key,attribute.value);if(p.events&&Array.isArray(p.events))for(let event of p.events)tag.addEventListener(event.type,event.callback);return tag},removeCard=id=>{const cardIndex=STATE.findIndex(card=>card.id===id);STATE.splice(cardIndex,1),_id(id).setAttribute("data-delete","true"),setTimeout(()=>{_id(id).remove()},200),sendToLocalStorage()},makeImageOrText=async value=>{let newElement;try{await checkImage(value),newElement=createElement({tag:"img",src:value})}catch(error){newElement=createElement({tag:"h3",textContent:value})}return newElement},render=async object=>{const card=createElement({tag:"button",id:object.id,classList:["card-body-outer"],attributes:[{key:"aria-label",value:"card"}],events:[{type:"click",callback:()=>{const map={true:"false",false:"true"},currentState=cardInner.getAttribute("data-flipped"),allCards=document.querySelectorAll(".card-body-inner[data-flipped='true']"),allBacks=document.querySelectorAll(".card-back[aria-expanded='true']");allCards.forEach(card=>card.setAttribute("data-flipped","false")),allBacks.forEach(back=>back.setAttribute("aria-expanded","false")),cardInner.setAttribute("data-flipped",map[currentState]),backStructure.setAttribute("aria-expanded",map[currentState])}}]}),closeButton=createElement({tag:"button",textContent:"×",attributes:[{key:"aria-label",value:"excluir card"}],events:[{type:"click",callback:event=>{event.stopPropagation(),removeCard(object.id)}}]}),cardInner=createElement({tag:"div",classList:["card-body-inner"],attributes:[{key:"data-flipped",value:"false"}]}),frontStructure=createElement({tag:"div",classList:["card-front"]}),backStructure=createElement({tag:"div",classList:["card-back"],attributes:[{key:"aria-expanded",value:"false"},{key:"aria-live",value:"assertive"}]}),frontContent=await makeImageOrText(object.front),backContent=await makeImageOrText(object.back);_ch(_id("main"),card),_ch(card,cardInner),_ch(cardInner,frontStructure,backStructure),_ch(frontStructure,frontContent,closeButton),_ch(backStructure,backContent)},reset=(...ids)=>{for(let id of ids)_id(id).value=""},createCard=(front,back)=>{const object={id:createUID(15),front:front,back:back};STATE.push(object),sendToLocalStorage(),render(object)},expandForm=(id,force)=>{clearErrors(),toggleExpand(id,force),"true"===_id(id).getAttribute("aria-expanded")&&_id("input-front").focus()},toggleExpand=(id,force)=>{const element=_id(id),valueToMap="boolean"==typeof force?!force:element.getAttribute("aria-expanded"),valueMap={null:"false",undefined:"false",true:"false",false:"true"},elementChildren=document.querySelectorAll(`#${id} *`);for(let i=0;i<elementChildren.length;i++)"false"===valueMap[valueToMap]?(elementChildren[i].setAttribute("tabindex","-1"),elementChildren[i].disabled=!0):(elementChildren[i].removeAttribute("tabindex"),elementChildren[i].disabled=!1);element.setAttribute("aria-expanded",valueMap[valueToMap])},displayErrors=()=>{for(let error of Object.entries(ERRORS))_id(error[0]).textContent=error[1]},clearErrors=()=>{for(let error of Object.entries(ERRORS))_id(error[0]).textContent="",delete ERRORS[error[0]]},handleFormSubmit=async event=>{event.preventDefault(),clearErrors();const front=_id("input-front").value,back=_id("input-back").value;try{await validate("front-error",front),await validate("back-error",back)}catch(error){console.error(error)}Object.keys(ERRORS).length>0?displayErrors():(reset("input-front","input-back"),createCard(front,back),toggleExpand("form-new",!1))},toggleTheme=()=>{const currentTheme=document.body.getAttribute("data-theme"),map={light:"dark",dark:"contrast",contrast:"light"};document.body.setAttribute("data-theme",map[currentTheme]),localStorage.setItem("theme",map[currentTheme])};window.addEventListener("load",()=>{BUTTON_NEW.addEventListener("click",()=>{expandForm("form-new"),toggleExpand("about",!1)}),BUTTON_ABOUT.addEventListener("click",()=>{toggleExpand("about"),expandForm("form-new",!1)}),BUTTON_THEME.addEventListener("click",toggleTheme),FORM_NEW.addEventListener("submit",handleFormSubmit);for(let card of STATE)render(card)});