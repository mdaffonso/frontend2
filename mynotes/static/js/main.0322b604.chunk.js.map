{"version":3,"sources":["components/NewForm/NewForm.module.css","components/EditForm/EditForm.module.css","components/Card/Card.module.css","screens/Home.module.css","components/Nav/Nav.module.css","components/Header/Header.module.css","components/Modal/Modal.module.css","components/Scaffold/Scaffold.module.css","contexts/MainContext.tsx","hooks/useImageCheck.tsx","utils/utils.tsx","components/NewForm/NewForm.tsx","components/Nav/Nav.tsx","components/Header/Header.tsx","components/Modal/Modal.tsx","components/Scaffold/Scaffold.tsx","components/EditForm/EditForm.tsx","components/Card/Card.tsx","screens/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","MainContext","createContext","MainContextProvider","children","useState","modalOpen","setModalOpen","modalTransition","setModalTransition","modalInnerComponent","setModalInnerComponent","JSONItemsFromStorage","localStorage","getItem","JSON","parse","useStorage","listOfNotes","setListOfNotes","Provider","value","updateList","note","action","newList","currList","indexOfNote","findIndex","obj","id","filter","oldNote","splice","unshift","jsonObject","jsonString","stringify","setItem","updateStorage","toggleModal","time","setTimeout","useImageCheck","url","timeoutT","Promise","resolve","timer","timeout","img","Image","onerror","onabort","clearTimeout","onload","src","randomIdGenerator","length","validChars","getRandomChar","num","Math","floor","random","randomString","i","NewForm","emptyError","title","content","image","error","setError","setTitle","setImage","setContent","context","useContext","imageChecker","newNoteHandler","e","a","hasError","preventDefault","prevError","newNote","toast","success","className","styles","onSubmit","InputGroup","htmlFor","type","name","onChange","target","rows","Nav","onClick","NavButton","Header","alt","Modal","component","Scaffold","EditForm","editNoteHandler","editedNote","Card","imageDescription","cardRef","useRef","h1Ref","ref","ButtonGroup","current","setAttribute","ContentGroup","Home","List","EmptyList","map","App","position","reverseOrder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0322b604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewForm\":\"NewForm_NewForm__UvWQm\",\"InputGroup\":\"NewForm_InputGroup__13zT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditForm\":\"EditForm_EditForm__2S6SG\",\"InputGroup\":\"EditForm_InputGroup__1-5WB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1SGnZ\",\"fade-out\":\"Card_fade-out__2VAwB\",\"ContentGroup\":\"Card_ContentGroup__2HaDv\",\"ButtonGroup\":\"Card_ButtonGroup__28rJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmptyList\":\"Home_EmptyList__1YXYs\",\"List\":\"Home_List__Drwaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavButton\":\"Nav_NavButton__y4BBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3QXp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__14XSL\",\"fade-in\":\"Modal_fade-in__2NzBR\",\"fade-out\":\"Modal_fade-out__2rtpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scaffold\":\"Scaffold_Scaffold__3ybuc\"};","import { useState, ReactNode } from \"react\"\nimport { createContext } from \"react\"\nimport { ChildrenType } from \"../types/ChildrenType\"\nimport { MainContextType } from \"../types/MainContextType\"\nimport { NoteType } from \"../types/NoteType\"\nimport { NoteListType } from \"../types/NoteListType\"\n\nexport const MainContext = createContext({} as MainContextType)\nexport const MainContextProvider = ({children}: ChildrenType) => {\n\n  const useStorage = () => {\n    const JSONItemsFromStorage = localStorage.getItem(\"MyNotes\")\n    if(JSONItemsFromStorage) {\n      return JSON.parse(JSONItemsFromStorage)\n    }\n    return []\n  }\n\n  const updateStorage = (jsonObject: NoteListType) => {\n    const jsonString = JSON.stringify(jsonObject)\n    localStorage.setItem(\"MyNotes\", jsonString)\n  }\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [modalTransition, setModalTransition] = useState(true)\n  const [modalInnerComponent, setModalInnerComponent] = useState<ReactNode>()\n  const [listOfNotes, setListOfNotes] = useState<NoteListType>(useStorage())\n\n  const toggleModal = () => {\n    let time = 0\n    if(modalOpen) {\n      time = 200\n    }\n\n    setModalTransition(value => !value)\n    setTimeout(() => {\n      setModalOpen(value => !value)\n    }, time)\n  }\n\n  const updateList = (note: NoteType, action: string) => {\n    const currList = [ ...listOfNotes ]\n    let newList\n\n    switch(action) {\n      case \"edit\":\n        const indexOfNote = currList.findIndex(obj => obj.id === note.id)\n        newList = currList.filter(oldNote => oldNote.id !== note.id)\n        newList.splice(indexOfNote, 0, note)\n        break\n      \n      case \"delete\":\n        newList = currList.filter(oldNote => oldNote.id !== note.id)\n        break\n\n      default:\n        currList.unshift(note)\n        newList = currList\n    }\n\n    setListOfNotes(newList)\n    updateStorage(newList)\n  }\n\n  return (\n    <MainContext.Provider value={{listOfNotes, updateList, modalOpen, toggleModal, modalInnerComponent, setModalInnerComponent, modalTransition}}>\n      {children}\n    </MainContext.Provider>\n  )\n}","export const useImageCheck = (url: string, timeoutT: number) => {\n  return new Promise((resolve) => {\n      const timeout = timeoutT || 5000;\n      const img = new Image();\n      let timer: ReturnType<typeof setTimeout>\n      img.onerror = img.onabort = () => {\n          clearTimeout(timer);\n          resolve(\"error\");\n      };\n      img.onload = () => {\n          clearTimeout(timer);\n          resolve(\"success\");\n      };\n      timer = setTimeout(() => {\n          img.src = \"//!!!!/test.jpg\";\n          resolve(\"timeout\");\n      }, timeout);\n      img.src = url;\n  });\n}","export const randomIdGenerator = (length: number) => {\n  const validChars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"\n\n  const getRandomChar = (num: number) => {\n    return Math.floor(Math.random() * (validChars.length-num))\n  }\n\n  let randomString = validChars[getRandomChar(11)]\n\n  for (let i = 0; i < length; i++) {\n    randomString += validChars[getRandomChar(1)]\n  }\n\n  return randomString\n}","import { FormEvent, useContext } from \"react\"\nimport { useState } from \"react\"\nimport toast from \"react-hot-toast\"\nimport { MainContext } from \"../../contexts/MainContext\"\nimport { useImageCheck } from \"../../hooks/useImageCheck\"\nimport { randomIdGenerator } from \"../../utils/utils\"\n\nimport styles from \"./NewForm.module.css\"\n\nexport const NewForm = () => {\n  const emptyError = {\n    title: \"\",\n    content: \"\",\n    image: \"\"\n  }\n\n  const [error, setError] = useState(emptyError)\n  const [title, setTitle] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const context = useContext(MainContext)\n  const imageChecker = useImageCheck(image, 3000)\n\n  const resetForm = () => {\n    setTitle(\"\")\n    setImage(\"\")\n    setContent(\"\")\n  }\n\n  const newNoteHandler = async (e: FormEvent<HTMLFormElement>) => {\n    let hasError = false\n    e.preventDefault()\n    if (image && (await imageChecker === \"error\" || await imageChecker === \"timeout\")) {\n      setError(prevError => ({...prevError, image: \"O valor informado deve ser uma URL contendo uma imagem\"}))\n      hasError = true\n    }\n\n    if (!title) {\n      setError(prevError => ({...prevError, title: \"O título é obrigatório\"}))\n      hasError = true\n    }\n\n    if (hasError) {\n      return\n    }\n\n    const newNote = {\n      id: randomIdGenerator(16),\n      title,\n      image,\n      content\n    }\n\n    context.updateList(newNote, \"new\")\n    context.toggleModal()\n    resetForm()\n    setError(emptyError)\n    hasError = false\n    toast.success(\"Nota criada com sucesso!\")\n  }\n\n  return (\n    <form className={styles.NewForm} onSubmit={newNoteHandler}>\n      <h1>Criar Nova Nota</h1>\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"title\">Título</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        { error.title && <div>{error.title}</div> }\n      </div>\n\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"image\">URL de Imagem</label>\n        <input type=\"text\" name=\"image\" id=\"image\" value={image} onChange={(e) => setImage(e.target.value)} />\n        { error.image && <div>{error.image}</div> }\n      </div>\n\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"content\">Conteúdo</label>\n        <textarea rows={4} name=\"content\" id=\"content\" value={content} onChange={(e) => setContent(e.target.value)} />\n        { error.content && <div>{error.content}</div> }\n      </div>\n\n      <button type=\"submit\">Criar</button>\n    </form>\n  )\n}","import styles from \"./Nav.module.css\"\nimport { MainContext } from \"../../contexts/MainContext\"\nimport { useContext } from \"react\"\nimport { NewForm } from \"../NewForm/NewForm\"\n\nexport const Nav = () => {\n  const context = useContext(MainContext)\n\n  const newItem = () => {\n    context.toggleModal()\n    context.setModalInnerComponent(() => <NewForm />)\n  }\n\n  return (\n    <button onClick={newItem} data-open={context.modalOpen} className={styles.NavButton}></button>\n  )\n}","import { Nav } from \"../Nav/Nav\"\nimport styles from \"./Header.module.css\"\n\nexport const Header = () => {\n  return (\n    <header className={styles.Header}>\n      <img src=\"logo.png\" alt=\"mynotes\" />\n      <Nav />\n    </header>\n  )\n}","import styles from \"./Modal.module.css\"\nimport { ModalType } from \"../../types/ModalType\"\nimport { useContext } from \"react\"\nimport { MainContext } from \"../../contexts/MainContext\"\n\nexport const Modal = ({component}: ModalType) => {\n  const context = useContext(MainContext)\n  return (\n    <div className={styles.Modal} aria-expanded={context.modalOpen} data-transition={context.modalTransition}>\n      {component}\n    </div>\n  )\n}","import { ChildrenType } from \"../../types/ChildrenType\"\nimport { Header } from \"../Header/Header\"\nimport { Modal } from \"../Modal/Modal\"\nimport { MainContext } from \"../../contexts/MainContext\"\nimport { useContext } from \"react\"\n\nimport styles from \"./Scaffold.module.css\"\n\nconst Scaffold = ({children}: ChildrenType) => {\n\n  const context = useContext(MainContext)\n\n  return (\n    <>\n      <div className={styles.Scaffold}>\n        <Header />\n        {children}\n      </div>\n      <Modal component={context.modalInnerComponent} />\n    </>\n  )\n}\n\nexport default Scaffold","import { FormEvent, useContext } from \"react\"\nimport { useState } from \"react\"\nimport toast from \"react-hot-toast\"\nimport { MainContext } from \"../../contexts/MainContext\"\nimport { useImageCheck } from \"../../hooks/useImageCheck\"\nimport { EditNoteType } from \"../../types/EditNoteType\"\n\nimport styles from \"./EditForm.module.css\"\n\nexport const EditForm = ({note}: EditNoteType) => {\n  const emptyError = {\n    title: \"\",\n    content: \"\",\n    image: \"\"\n  }\n\n  const [error, setError] = useState(emptyError)\n  const [title, setTitle] = useState(note.title)\n  const [image, setImage] = useState(note.image || \"\")\n  const [content, setContent] = useState(note.content)\n  const context = useContext(MainContext)\n  const imageChecker = useImageCheck(image, 3000)\n\n  const resetForm = () => {\n    setTitle(\"\")\n    setImage(\"\")\n    setContent(\"\")\n  }\n\n  const editNoteHandler = async (e: FormEvent<HTMLFormElement>) => {\n    let hasError = false\n    e.preventDefault()\n    if (image && (await imageChecker === \"error\" || await imageChecker === \"timeout\")) {\n      setError(prevError => ({...prevError, image: \"O valor informado deve ser uma URL contendo uma imagem\"}))\n      hasError = true\n    }\n\n    if (!title) {\n      setError(prevError => ({...prevError, title: \"O título é obrigatório\"}))\n      hasError = true\n    }\n\n    if (hasError) {\n      return\n    }\n\n    const editedNote = {\n      id: note.id,\n      title,\n      image,\n      content\n    }\n\n    context.updateList(editedNote, \"edit\")\n    context.toggleModal()\n    resetForm()\n    setError(emptyError)\n    hasError = false\n    toast.success(\"Nota editada com sucesso!\")\n  }\n\n  return (\n    <form className={styles.EditForm} onSubmit={editNoteHandler}>\n      <h1>Editar Nota</h1>\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"title\">Título</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        { error.title && <div>{error.title}</div> }\n      </div>\n\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"image\">URL de Imagem</label>\n        <input type=\"text\" name=\"image\" id=\"image\" value={image} onChange={(e) => setImage(e.target.value)} />\n        { error.image && <div>{error.image}</div> }\n      </div>\n\n      <div className={styles.InputGroup}>\n        <label htmlFor=\"content\">Conteúdo</label>\n        <textarea rows={4} name=\"content\" id=\"content\" value={content} onChange={(e) => setContent(e.target.value)} />\n        { error.content && <div>{error.content}</div> }\n      </div>\n\n      <button type=\"submit\">Enviar</button>\n    </form>\n  )\n}","import { useContext, useRef } from \"react\"\nimport toast from \"react-hot-toast\"\nimport { MainContext } from \"../../contexts/MainContext\"\nimport { CardType } from \"../../types/CardType\"\nimport { EditForm } from \"../EditForm/EditForm\"\nimport styles from \"./Card.module.css\"\n\nexport const Card = ({id, title, content, image, imageDescription}: CardType) => {\n\n  const context = useContext(MainContext)\n\n  const deleteNote = () => {\n    cardRef.current?.setAttribute(\"data-remove\", \"true\")\n    toast.success(\"Nota removida com sucesso\")\n    setTimeout(() => {\n      context.updateList({id, title, content, image}, \"delete\")\n    }, 200)\n  }\n\n  const cardRef = useRef<HTMLDivElement | null>(null)\n  const h1Ref = useRef<HTMLDivElement | null>(null)\n\n  const toggleEditHandler = () => {\n    context.setModalInnerComponent(() => <EditForm note={{id, title, content, image}} />)\n    context.toggleModal()\n  }\n\n  return (\n    <div ref={cardRef} className={styles.Card}>\n      <h2 ref={h1Ref}>{title}</h2>\n      <div className={styles.ButtonGroup}>\n        <button data-action=\"edit\" onClick={toggleEditHandler}><img src=\"icon-edit.png\" alt=\"edit icon\" /></button>\n        <button data-action=\"delete\" onClick={deleteNote}><img src=\"icon-delete.png\" alt=\"delete icon\" /></button>\n      </div>\n      <div className={styles.ContentGroup} data-title={title}>\n        {image && <img src={image} alt={imageDescription} />}\n        {content && <p>{content}</p>}\n      </div>\n    </div>\n  )\n}","import { useContext } from \"react\"\nimport { Card } from \"../components/Card/Card\"\nimport { MainContext } from \"../contexts/MainContext\"\n\nimport styles from \"./Home.module.css\"\n\nexport const Home = () => {\n\n  const context = useContext(MainContext)\n\n  return (\n    <div className={styles.List}>\n      {context.listOfNotes.length === 0 && <p className={styles.EmptyList}>Você não tem nenhuma nota salva ainda. Clique no botão \"+\" para adicionar uma nova.</p>}\n      {context.listOfNotes.map(note => (\n        <Card id={note.id} title={note.title} content={note.content} image={note.image} imageDescription={note.title} key={note.id} />\n      ))}\n    </div>\n  )\n}","import Scaffold from \"./components/Scaffold/Scaffold\";\nimport { Home } from \"./screens/Home\";\nimport { MainContextProvider } from \"./contexts/MainContext\";\nimport { Toaster } from \"react-hot-toast\"\n\nfunction App() {\n  return (\n    <MainContextProvider>\n      <Toaster\n        position=\"bottom-center\"\n        reverseOrder={false} \n      />\n      <Scaffold>\n        <Home />\n      </Scaffold>\n    </MainContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}